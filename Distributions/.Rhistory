q
shiny::runApp()
q
# Functie pentru a crea o fila
create_tab <- function(tab_title, title, img1_src, img2_src, distribution) {
tabPanel(
tab_title,
div(
class = "container",
h1(title),
div(
class = "d-flex justify-content-center",
img(src = img1_src, style = "filter: invert(1);height:4vh;"),
img(src = img2_src, style = "filter: invert(1);height:4vh;")
),
div(
class = "row",
div(
class = "col-4",
tags$h3("Input:"),
# sliderInput(paste0("r", tab_number), "Numarul de succese (r):", min = 1, max = 50, value = 10, step = 1),
# checkboxInput(paste0("fix_r", tab_number), "Fixeaza r", value = TRUE),
# sliderInput(paste0("p", tab_number), "Probabilitatea de succes (p):", min = 0.01, max = 1, value = 0.5, step = 0.01),
# checkboxInput(paste0("fix_p", tab_number), "Fixeaza p", value = FALSE)
switch(
distribution,
# NORMALA_STANDARD = create_norm_std_slider(),
# NORMALA = create_norm_slider(),
# BINOMIALA = create_binom_slider(),
# EXPONENTIALA = create_exp_slider(),
POISSON = create_pois_slider()
)
),
div(
class = "col-8",
h4("Reprezentare Grafica"),
# switch pentru a selecta tipul de distributie
switch(
distribution,
NORMALA_STANDARD = plotOutput("norm_std_server"),
NORMALA = textOutput("norm_server"),
BINOMIALA = textOutput("binom_server"),
EXPONENTIALA = textOutput("exp_server"),
POISSON = textOutput("pois_server")
),
)
)
)
)
}
runApp()
options(shiny.launch.browser = FALSE)  # Dezactivează deschiderea în browser extern
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
